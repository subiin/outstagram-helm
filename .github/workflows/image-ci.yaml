name: Image CI

on:
  push:
    paths:
    - 'image-server/**'
    tags:
    - 'i_*'
      
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Make application.yaml
      run: |
        cd image-server
        touch ./src/main/resources/application.yaml
        echo "${{ secrets.AWS_IMAGE_PROPERTIES }}" > ./src/main/resources/application.yaml

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x ./image-server/gradlew

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_CI_ROLE }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Extract tag name
      id: extract_tag
      shell: bash
      run: echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Confirm Image Tag
      run: echo $IMAGE_TAG

    - name: Build with Gradle
      run: |
        cd image-server
        ./gradlew build

    - name: Build and Push Docker image with Jib
      run: |
        cd image-server
        ./gradlew jib --image=${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_IMAGE_SERVER_REPO }}:${{ env.IMAGE_TAG }}