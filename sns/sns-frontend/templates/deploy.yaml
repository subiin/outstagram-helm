apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-server
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.appName }}-server
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}-server
    spec:
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: {{ .Values.appName }}-volume
          persistentVolumeClaim:
            claimName: {{ .Values.appName }}-volume-claim
      {{- end }}
      containers:
        - name: {{ .Values.appName }}-container
          image: 975050179689.dkr.ecr.ap-northeast-2.amazonaws.com/outstagram-{{ .Values.profile }}-{{ .Values.appName }}:{{ .Values.imageTag }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: {{ .Values.appName }}-volume
              mountPath: {{ .Values.persistence.mountPath }}
          {{- end }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.profile }}
            {{- with .Values.envs }}
            {{- toYaml . | nindent 12 }}
            {{- end}}
          {{- if .Values.configs }}
          envFrom:
            {{- range .Values.configs }}
            - configMapRef:
                name: {{ . | trimSuffix "-nosecret" }}-config
            {{- if not (hasSuffix "-nosecret" .)}}
            - secretRef:
                name: {{ . }}-secret
            {{- end }}
            {{- end }}
          {{- end }}
          resources:
            requests:
              memory: {{ .Values.resources.memory.requests }}
              cpu: {{ .Values.resources.cpu.requests }}
            limits:
              memory: {{ .Values.resources.memory.limits }}
              cpu: {{ .Values.resources.cpu.limits }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","sleep 10"]
          {{- if .Values.probe }}
          {{- with .Values.probe.readiness }}
          readinessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- with .Values.probe.liveness }}
          livenessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
      {{- if .Values.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.appName }}-server
            topologyKey: kubernetes.io/hostname
      {{- end }}